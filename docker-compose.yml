version: '3.8'

services:
  frontend:
    build:
      context: ./my-new-project
      dockerfile: Dockerfile
    volumes:
      - ./my-new-project:/app #ici on crée un bind mount qui utilise le chemin absolue qui pointe sur le dossier contenant le frontend pour permettre la connexion avec le conteneur Docker
    ports:
      - "3000:3000"
    networks:
      - frontend-backend-network
    depends_on:
      - backend-animals
      - backend-staff

  backend-animals:
    build:
      context: ./backend-animals
      dockerfile: Dockerfile.app  # Utiliser Dockerfile.app pour backend-animals
    volumes:
      - ./backend-animals:/app # mise à jour rapide du code sans reconstruire l'image docker
      - backend-animals-data:/app/data # utilise le volume backend-animals-data pour monter un dossier persistant /app/data 
    networks:
      - frontend-backend-network
      - backend-animal-db-network
    depends_on:
      - backend-animals-db
    ports:
      - "8080:8080"

  backend-animals-db:
    build:
      context: ./backend-animals
      dockerfile: Dockerfile.db  # Utiliser Dockerfile.db pour backend-animals-db
    environment:
      POSTGRES_DB: "animal_db"
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "password"
    
    volumes:
      - backend-animals-data:/var/lib/postgresql/data 
    networks:
      - backend-animal-db-network

  backend-staff:
    build:
      context: ./backend-staff
      dockerfile: Dockerfile.app  # Utiliser Dockerfile.app pour backend-staff
    volumes:
      - ./backend-staff:/app 
      - backend-staff-data:/app/data #utilise un volume différent de backend-animals
    networks:
      - frontend-backend-network
      - backend-staff-db-network
    depends_on:
      - backend-staff-db
    ports:
      - "8090:8090"

  backend-staff-db:
    build:
      context: ./backend-staff
      dockerfile: Dockerfile.db  # Utiliser Dockerfile.db pour backend-staff-db
    environment:
      POSTGRES_DB: "staff_db"
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "password" 
      
    volumes:
      - backend-staff-data:/var/lib/postgresql/data
    networks:
      - backend-staff-db-network

networks: #un réseau qui relit le frontend et le backend, un réseau propre au backend-animal, un réseau propre au backend-staff
  frontend-backend-network:
    driver: bridge
  backend-animal-db-network:
    driver: bridge
  backend-staff-db-network:
    driver: bridge

volumes:
  backend-animals-data:
  backend-staff-data:
